//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProSuite.QA.Tests.Documentation {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DocTrStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DocTrStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ProSuite.QA.Tests.Documentation.DocTrStrings", typeof(DocTrStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to transformes line feature class &apos;featureclass&apos; by dissolving connected features.
        /// </summary>
        internal static string TrDissolve_0 {
            get {
                return ResourceManager.GetString("TrDissolve_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attributes to be transfered to transformed feature class. Must be used with alias and group expression, i.e. &apos;MAX(LAUF_NR) AS MAX_LAUF_NR&apos;.
        ///In the resulting feature class, only attributes defined in &apos;Attributes&apos; or &apos;GroupBy&apos; can be used..
        /// </summary>
        internal static string TrDissolve_Attributes {
            get {
                return ResourceManager.GetString("TrDissolve_Attributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only feature that fulfill constraint between each other are dissolved.
        /// </summary>
        internal static string TrDissolve_Constraint {
            get {
                return ResourceManager.GetString("TrDissolve_Constraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Default = false)
        ///- false: create separate features when 3 or more features are connected. Only connections with 2 features are dissolved.
        ///- true: create multpart features for all connected source features..
        /// </summary>
        internal static string TrDissolve_CreateMultipartFeatures {
            get {
                return ResourceManager.GetString("TrDissolve_CreateMultipartFeatures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line feature class to dissolve.
        /// </summary>
        internal static string TrDissolve_featureclass {
            get {
                return ResourceManager.GetString("TrDissolve_featureclass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group features by &apos;GroupBy&apos; before dissolving
        ///In the resulting feature class, only attributes defined in &apos;Attributes&apos; or &apos;GroupBy&apos; can be used..
        /// </summary>
        internal static string TrDissolve_GroupBy {
            get {
                return ResourceManager.GetString("TrDissolve_GroupBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Default = Tile)
        ///-Tile: dissolve features only within the current tile
        ///- All: if features start/end outside tile, load additional connected features (recursively).
        /// </summary>
        internal static string TrDissolve_NeighborSearchOption {
            get {
                return ResourceManager.GetString("TrDissolve_NeighborSearchOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additonal distance to cache &apos;featureclass&apos; features per tile.
        /// </summary>
        internal static string TrDissolve_SearchDistance {
            get {
                return ResourceManager.GetString("TrDissolve_SearchDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transforms multipatches to polygons by taking their footprints.
        /// </summary>
        internal static string TrFootprint_0 {
            get {
                return ResourceManager.GetString("TrFootprint_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to multipatch feature class to transform.
        /// </summary>
        internal static string TrFootprint_multipatchClass {
            get {
                return ResourceManager.GetString("TrFootprint_multipatchClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transforms geometries to points. The transformed feature class has the attribute PartIndex and VertexIndex. These fields index from which polygon part the transformed polygon part was generated.
        /// </summary>
        internal static string TrGeometryToPoints_0 {
            get {
                return ResourceManager.GetString("TrGeometryToPoints_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GeometryComponent to extract.
        /// </summary>
        internal static string TrGeometryToPoints_component {
            get {
                return ResourceManager.GetString("TrGeometryToPoints_component", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to multipoint, line, polygon or multpatch class to transform.
        /// </summary>
        internal static string TrGeometryToPoints_featureClass {
            get {
                return ResourceManager.GetString("TrGeometryToPoints_featureClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attributes that are copied from source featureclass to resulting featureclass.
        /// </summary>
        internal static string TrGeometryTransform_Attributes {
            get {
                return ResourceManager.GetString("TrGeometryTransform_Attributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transforms closed lines of &apos;closedLineClass&apos; to polygons.
        /// </summary>
        internal static string TrLineToPoly_0 {
            get {
                return ResourceManager.GetString("TrLineToPoly_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to line feature class to transform.
        /// </summary>
        internal static string TrLineToPoly_closedLineClass {
            get {
                return ResourceManager.GetString("TrLineToPoly_closedLineClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines how to handle not closed lines
        ///- AsPolygonIfClosedElseIgnore (default) : ignore not closed lines.
        /// </summary>
        internal static string TrLineToPoly_PolylineUsage {
            get {
                return ResourceManager.GetString("TrLineToPoly_PolylineUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transforms multi-lines to single lines. The transformed feature class has the attribute PartIndex. This field index from which polygon part the transformed polygon part was generated.
        /// </summary>
        internal static string TrMultilineToLine_0 {
            get {
                return ResourceManager.GetString("TrMultilineToLine_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to line feature class to transform.
        /// </summary>
        internal static string TrMultilineToLine_featureClass {
            get {
                return ResourceManager.GetString("TrMultilineToLine_featureClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transforms multi-polygons to single polygons. The transformed feature class has the attributes OuterRingIndex and InnerRingIndex. These fields index from which polygon part the transformed polygon part was generated.
        /// </summary>
        internal static string TrMultipolygonToPolygon_0 {
            get {
                return ResourceManager.GetString("TrMultipolygonToPolygon_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to polygon feature class to transform.
        /// </summary>
        internal static string TrMultipolygonToPolygon_featureClass {
            get {
                return ResourceManager.GetString("TrMultipolygonToPolygon_featureClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default = SinglePolygons
        ///-SinglePolygon: converts multi polygon to single polygons (Remark: InnerRingIndex = -2)
        ///-OuterRings: converts all out rings to polygons (Remark: InnerRingIndex = -1)
        ///-InnerRings: converts all inner rings to polygons
        ///-AllRings: converts all rings to polygons (Remark: polygons generated from outer rings: InnerRingIndex = -1).
        /// </summary>
        internal static string TrMultipolygonToPolygon_TransformedParts {
            get {
                return ResourceManager.GetString("TrMultipolygonToPolygon_TransformedParts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transform polygon to line by taking the boundary of the polygons in &apos;featureClass&apos;.
        /// </summary>
        internal static string TrPolyToLine_0 {
            get {
                return ResourceManager.GetString("TrPolyToLine_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to polygon feature class.
        /// </summary>
        internal static string TrPolyToLine_featureClass {
            get {
                return ResourceManager.GetString("TrPolyToLine_featureClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transforms features of &apos;t0&apos; and features of &apos;t1&apos; to features, with shape of &apos;t0&apos; if they intersect..
        /// </summary>
        internal static string TrSpatialJoin_0 {
            get {
                return ResourceManager.GetString("TrSpatialJoin_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constraint on spatially joined features. Only spatially joined feature pairs that fulfill the constraint will be transformed to resulting features.
        ///The involved features are aliased using &quot;T0&quot; and T1&quot;.
        ///Example: T0.Level = T1.Level.
        /// </summary>
        internal static string TrSpatialJoin_Constraint {
            get {
                return ResourceManager.GetString("TrSpatialJoin_Constraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default = false.
        ///If false: create one feature for each (t0,t1)-feature pair that intersects
        ///if true: create one feature for each feature in &apos;t0&apos;, that intersects any feature of &apos;t1&apos;.
        /// </summary>
        internal static string TrSpatialJoin_Grouped {
            get {
                return ResourceManager.GetString("TrSpatialJoin_Grouped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Default = Tile)
        ///-Tile: join features only within the current tile
        ///- All: if features lie partially outside tile, load additional connected features .
        /// </summary>
        internal static string TrSpatialJoin_NeighborSearchOption {
            get {
                return ResourceManager.GetString("TrSpatialJoin_NeighborSearchOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default = false.Left outer Join.
        ///If true: transform features from t0-features that have no spatial relation to any feature of t1
        ///If false: ignore features from t0 that have no spatial relation to any feature of t1.
        /// </summary>
        internal static string TrSpatialJoin_OuterJoin {
            get {
                return ResourceManager.GetString("TrSpatialJoin_OuterJoin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature class that provides the shape for the new features.
        /// </summary>
        internal static string TrSpatialJoin_t0 {
            get {
                return ResourceManager.GetString("TrSpatialJoin_t0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attributes of &apos;t0&apos; that are transfered to transformed feature class. Can be used with alias, i.e. &apos;TOPGIS_TLM.TLM_GEWAESSER_LAUF.LAUF_NR AS T1_LAUF_NR&apos;.
        ///In the resulting feature class, only attributes defined in T0Attributes or T1Attributes can be used. .
        /// </summary>
        internal static string TrSpatialJoin_T0Attributes {
            get {
                return ResourceManager.GetString("TrSpatialJoin_T0Attributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature class to join.
        /// </summary>
        internal static string TrSpatialJoin_t1 {
            get {
                return ResourceManager.GetString("TrSpatialJoin_t1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See T0Attributes.
        ///If &apos;Grouped&apos;=true, the attributes must be defined by Group-Expressions like COUNT(),MIN(),MAX()... 
        ///Remark: Group expressions can only containt a single field expression. If a more complex expression is needed, use the parameter T1CalcAttributes.
        ///Example: Count the number of joined features with a specific objecttype &apos;x&apos; would be: 
        ///T1CalcAttributes: &quot;IIF(objecttype=&apos;x&apos;,1,0) AS X_VALUE&quot;
        ///T1Attributes: &quot;SUM(X_VALUE) AS X_COUNT&quot;.
        /// </summary>
        internal static string TrSpatialJoin_T1Attributes {
            get {
                return ResourceManager.GetString("TrSpatialJoin_T1Attributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculations with attributes of &apos;t1&apos; that are used in Group-Expressions.
        ///See T1Attributes.
        /// </summary>
        internal static string TrSpatialJoin_T1CalcAttributes {
            get {
                return ResourceManager.GetString("TrSpatialJoin_T1CalcAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transforms table &apos;t0&apos; and table &apos;t1&apos;, which must be related by &apos;relationName&apos;, to a joined table.
        /// </summary>
        internal static string TrTableJoin_0 {
            get {
                return ResourceManager.GetString("TrTableJoin_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JoinType.
        /// </summary>
        internal static string TrTableJoin_joinType {
            get {
                return ResourceManager.GetString("TrTableJoin_joinType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to name of existing relation between &apos;t0&apos; and &apos;t1&apos;.
        /// </summary>
        internal static string TrTableJoin_relationName {
            get {
                return ResourceManager.GetString("TrTableJoin_relationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to table to join with &apos;t1&apos;.
        /// </summary>
        internal static string TrTableJoin_t0 {
            get {
                return ResourceManager.GetString("TrTableJoin_t0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to table to join with &apos;t0&apos;.
        /// </summary>
        internal static string TrTableJoin_t1 {
            get {
                return ResourceManager.GetString("TrTableJoin_t1", resourceCulture);
            }
        }
    }
}
