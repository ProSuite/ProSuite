@using Microsoft.AspNetCore.Components.Web
@using ProSuite.DdxEditor.Framework.Items
@using ProSuite.UI.QA
@using Radzen
@using Radzen.Blazor

@code {

	private async Task EditRow(ParameterValueListItem item)
	{
		await DataGrid.EditRow(item);
	}

	private async Task UpdateRow(ParameterValueListItem item)
	{
		await DataGrid.UpdateRow(item);
	}

	private void CancelEdit(ParameterValueListItem item)
	{
		DataGrid.CancelEditRow(item);
	}

	private async Task OnUpdateRow(ParameterValueListItem arg)
	{
		await Task.FromResult(0);
	}

	private void ButtonAssignToQualitySpecifications_Click()
	{
		Observer.AssignToQualitySpecificationsClicked();
	}
}

<h1>Quality Condition</h1>

<button @onclick="ButtonAssignToQualitySpecifications_Click"></button>

<RadzenDataGrid @ref="DataGrid" 
                TItem="ParameterValueListItem"
                EditMode="DataGridEditMode.Single"
                RowUpdate="@OnUpdateRow">
    <Columns>
        <RadzenDataGridColumn TItem="ParameterValueListItem" Property="ParameterName" Title="Parameter" Width="140px"/>
        <RadzenDataGridColumn TItem="ParameterValueListItem" Property="Value" Title="Value">
            <Template>
                <RadzenButton ButtonStyle="ButtonStyle.Primary" Click="@ValueButtonsClicked"/>
            </Template>
            <EditTemplate Context="item">
                <RadzenTextBox @bind-value="item.Value" Style="width: 100%; display: block"/>
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="ParameterValueListItem" Property="ModelName" Title="Data Model"/>
        <RadzenDataGridColumn TItem="ParameterValueListItem" Property="FilterExpression" Title="Filter Expression"/>
        <RadzenDataGridColumn TItem="ParameterValueListItem" Property="UsedAsReferenceData" Title="Reference"/>
        <RadzenDataGridColumn TItem="ParameterValueListItem" Context="sampleBlazorModelsSampleOrder" 
                              TextAlign="TextAlign.Center" Width="120px">
            <Template Context="item">
                <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Click="@(args => EditRow(item))" @onclick:stopPropagation="true"/>
            </Template>
            <EditTemplate Context="item">
                <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Primary" Click="@((args) => UpdateRow(item))">
                </RadzenButton>
                <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Click="@((args) => CancelEdit(item))">
                </RadzenButton>
            </EditTemplate>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>
