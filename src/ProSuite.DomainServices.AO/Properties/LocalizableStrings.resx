<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AttributeConflictResolutionReason_PreReconcileVersionNoAttributeChangeInReconcileVersion" xml:space="preserve">
    <value>Reconcile version's attributes were not changed - solved in favor of pre-reconcile version.</value>
  </data>
  <data name="AttributeConflictResolutionReason_HigherPriority" xml:space="preserve">
    <value>Solved in favour of value with higher priority.</value>
  </data>
  <data name="AttributeConflictResolutionReason_IgnoredForeignKeyAttribute" xml:space="preserve">
    <value>Foreign key attribute ignored - relationship conflicts are handled separately.</value>
  </data>
  <data name="IssueMapUtils_DataFrameName" xml:space="preserve">
    <value>Verification results</value>
  </data>
  <data name="IssueMapUtils_GroupLayerName_Errors" xml:space="preserve">
    <value>Errors</value>
  </data>
  <data name="IssueMapUtils_GroupLayerName_Raw" xml:space="preserve">
    <value>Issue feature classes</value>
  </data>
  <data name="IssueMapUtils_GroupLayerName_Warnings" xml:space="preserve">
    <value>Warnings</value>
  </data>
  <data name="AttributeConflictResolutionReason_LaterDateChangedSystemAttribute" xml:space="preserve">
    <value>Solved in favour of later change.</value>
  </data>
  <data name="AttributeConflictResolutionReason_LaterVersionSystemAttribute" xml:space="preserve">
    <value>Solved in favour of later version.</value>
  </data>
  <data name="AttributeConflictResolutionReason_NotNullValueSystemAttribute" xml:space="preserve">
    <value>Solved in favour of non-null value.</value>
  </data>
  <data name="AttributeConflictResolutionReason_ReconcileVersionNoAttributeChangeInPreReconcileVersion" xml:space="preserve">
    <value>Pre-reconcile version's attributes were not changed - solved in favor of reconcile version.</value>
  </data>
  <data name="ReconcilingWithParent" xml:space="preserve">
    <value>Reconciling {0} with parent version...</value>
  </data>
  <data name="AttributeConflictResolutionReason_AttributeChangedOnlyInOneVersion" xml:space="preserve">
    <value>Solved according to the version where the attribute was changed.</value>
  </data>
  <data name="TotalConflictsDetails" xml:space="preserve">
    <value>{0} solved, {1} uncertain, {2} unsolved.</value>
  </data>
  <data name="TotalConflictsN" xml:space="preserve">
    <value>Successfully reconciled {0} - {1} conflict(s).</value>
  </data>
  <data name="AttributeConflictResolutionReason_Unresolved" xml:space="preserve">
    <value>Unresolved.</value>
  </data>
  <data name="AttributeConflictResolutionReason_UnsolvedUnexpectedSystemAttributeConflict" xml:space="preserve">
    <value>Unexpected and unsolved conflict on system attribute.</value>
  </data>
  <data name="RuleBasedVerificationFunctionBase_CreateParameterInfo_OutputDirectory" xml:space="preserve">
    <value>Output directory</value>
  </data>
  <data name="RuleBasedVerificationFunctionBase_CreateParameterInfo_ObjectClass" xml:space="preserve">
    <value>Object Class</value>
  </data>
  <data name="RuleBasedVerificationFunctionBase_CreateParameterInfo_VerificationTileSize" xml:space="preserve">
    <value>Verification Tile Size</value>
  </data>
  <data name="RuleBasedVerificationFunctionBase_CreateParameterInfo_Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="HtmlReports_IssueType_Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="HtmlReports_IssueType_Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="IssueMapUtils_GroupLayerName_Issues" xml:space="preserve">
    <value>Issues</value>
  </data>
  <data name="IssueMapUtils_GroupLayerName_Exceptions" xml:space="preserve">
    <value>Exceptions</value>
  </data>
  <data name="RawIssuesLayerName_Multipoint" xml:space="preserve">
    <value>Point issues</value>
  </data>
  <data name="RawIssuesLayerName_Polyline" xml:space="preserve">
    <value>Polyline issues</value>
  </data>
  <data name="RawIssuesLayerName_Polygon" xml:space="preserve">
    <value>Polygon issues</value>
  </data>
  <data name="RawIssuesLayerName_MultiPatch" xml:space="preserve">
    <value>Multipatch issues</value>
  </data>
  <data name="ExceptionLayerName_Multipoint" xml:space="preserve">
    <value>Point exceptions</value>
  </data>
  <data name="ExceptionLayerName_Polyline" xml:space="preserve">
    <value>Polyline exceptions</value>
  </data>
  <data name="ExceptionLayerName_Polygon" xml:space="preserve">
    <value>Polygon exceptions</value>
  </data>
  <data name="ExceptionLayerName_MultiPatch" xml:space="preserve">
    <value>Multipatch exceptions</value>
  </data>
  <data name="IssuesStandaloneTableName" xml:space="preserve">
    <value>Issues without geometry</value>
  </data>
  <data name="ExceptionStandaloneTableName" xml:space="preserve">
    <value>Exceptions without geometry</value>
  </data>
  <data name="AoiLayerName" xml:space="preserve">
    <value>Area of Interest</value>
  </data>
  <data name="IssueStatisticsTableName" xml:space="preserve">
    <value>Issue Statistics</value>
  </data>
  <data name="ImportExceptionsFunctionBase_FormatConflicts" xml:space="preserve">
    <value>Attribute conflict(s): {0}</value>
  </data>
  <data name="ExceptionLayerHierarchy_UsageLevel_UsedLayerName" xml:space="preserve">
    <value>Used exceptions</value>
  </data>
  <data name="ExceptionLayerHierarchy_UsageLevel_UnusedLayerName" xml:space="preserve">
    <value>Unused exceptions</value>
  </data>
  <data name="ExceptionLayerHierarchy_IssueAssignmentLevel_UnassignedLayerName" xml:space="preserve">
    <value>No issue assignment</value>
  </data>
  <data name="ExceptionLayerHierarchy_IssueAssignmentLevel_AssignedLayerFormat" xml:space="preserve">
    <value>Issue assignment {0}</value>
  </data>
  <data name="ExceptionLayerHierarchy_ExceptionCategoryLevel_NoCategoryLayerName" xml:space="preserve">
    <value>No exception category</value>
  </data>
  <data name="ExceptionLayerHierarchy_ExceptionCategoryLevel_CategoryLayerFormat" xml:space="preserve">
    <value>Exception category {0}</value>
  </data>
  <data name="IssueMapContent_RawExceptionLayers_GroupLayerName" xml:space="preserve">
    <value>All exceptions</value>
  </data>
  <data name="IssueMapUtils_RawExceptionLayerNameFormat" xml:space="preserve">
    <value>{0} (all)</value>
  </data>
  <data name="IssueMapUtils_GroupedExceptionLayer_UnusedSuffix" xml:space="preserve">
    <value>not used</value>
  </data>
  <data name="IssueMapUtils_GroupedExceptionLayerName_NoExceptionCategoryToken" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="IssueMapUtils_GroupedExceptionLayerName_NoIssueAssignmentToken" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="IssueMapUtils_GroupedExceptionLayerDescription_ExceptionCountFormat" xml:space="preserve">
    <value>Number of exceptions: {0:N0}</value>
  </data>
  <data name="IssueMapUtils_GroupedExceptionLayerDescription_IssueAssignmentFormat" xml:space="preserve">
    <value>- Issue assignment: {0}</value>
  </data>
  <data name="IssueMapUtils_GroupedExceptionLayerDescription_ExceptionCategoryFormat" xml:space="preserve">
    <value>- Exception category: {0}</value>
  </data>
  <data name="IssueMapUtils_GroupedExceptionLayerDescription_IsUsed" xml:space="preserve">
    <value>- The exceptions matched a reported issue</value>
  </data>
  <data name="IssueMapUtils_GroupedExceptionLayerDescription_IsNotUsed" xml:space="preserve">
    <value>- The exceptions did not match a reported issue</value>
  </data>
</root>