@using ProSuite.DdxEditor.Content.Blazor.View
@using ProSuite.DdxEditor.Content.Blazor.ViewModel
@using Radzen
@using Radzen.Blazor

<style>
    /*Control color*/
	html, body {
        background-color: #f0f0f0
    }
	
	.rz-datatable {
		/*background-color: black;*/ /*eliminates the slight shadow around data grid*/
		border: solid 1px black; /*black border*/
		border-radius: unset;
	}

	.rz-datatable td {
		padding: 0 0.5rem 0 0.5rem; /*padding of grid cells*/
		height: 1.8rem; /*height of data rows*/
	}

	/*unnecessary*/
	/*.rz-datatable-even > td {
		background-color: #ffffff;
	}*/

	/*the same color for odd rows*/
	.rz-datatable-odd > td {
		background-color: unset;
	}

	.rz-datatable-data td .rz-cell-data, .rz-grid-table td .rz-cell-data {
		color: black;
		font-size: 0.75rem; /*75% of 16px*/
	}

	/* For highlight when you click on a row. */
	.rz-state-highlight td {
		background-color: #0078d7 !important;
	}

	/* For hover  */
	.rz-selectable .rz-datatable-even:hover:not(.rz-state-highlight) > td,
	.rz-selectable .rz-datatable-odd:hover:not(.rz-state-highlight) > td {
		background-color: unset !important;
	}

	/* Color of text when hover */
	.rz-selectable .rz-datatable-even:hover:not(.rz-state-highlight) .rz-cell-data,
	.rz-selectable .rz-datatable-odd:hover:not(.rz-state-highlight) .rz-cell-data {
		color: black !important;
		/*background-color: black !important*/
	}
    
	.rz-datatable-thead th, .rz-grid-table thead th {
		background-color: #e6ecef;
		padding: 0 0 0 0; /*padding of column header (1)*/
	}
    
	.rz-datatable-thead th .rz-column-title, .rz-grid-table thead th .rz-column-title {
		text-transform: unset; /*lower case*/
		color: black;
		padding: 0 0 0.25rem 0.5rem; /*padding of column header (2)*/
	}

	.rz-expanded-row-template {
		background-color: #ffffff;
		padding: 0.625rem;
		border: none; /*small frame around expanded row*/
		border-radius: unset;
	}

	.rz-switch {
		display: block;
		height: 1.29rem;
	}

	.rz-switch.rz-switch-checked .rz-switch-circle {
		background: #367736;
	}
    
	.rz-textbox {
		width: 100%;
		height: auto;
		max-height: 1.8rem;
		margin: 0;
		border-radius: unset;
	}

    .rz-dropdown {
	    height: 1.8rem;
	    max-height: 1.8rem;
	    padding-top: 0;
	    padding-bottom: 0.25rem;
	    margin: 0.25rem 0 0 0;
	    border-radius: unset;
    }

	.rz-button {
		border-radius: 0;
		border: 1px solid #adadad;
		background-color: #e1e1e1;
		height: 20px ! important;
		padding: 0 8px ! important;
		margin: 0 0 0 0;
	}

    /*button border when button is disbled*/
	.rz-button.rz-state-disabled, .rz-state-disabled.rz-paginator-element {
		border: 1px solid black ! important;
	}

    .ui-image {
	    padding: 0 0 10px 0;
    }

</style>

<div class="container-fluid" style="margin: 0.625rem 0 0 -0.75rem;">
    <div class="row">
        <div class="col">
            <RadzenDataGrid @ref="_mainGrid"
                            TItem="ViewModelBase"
                            Data="Rows"
                            SelectionMode="DataGridSelectionMode.Single"
                            ExpandMode="DataGridExpandMode.Multiple"
                            EditMode="DataGridEditMode.Single"
                            AllowColumnResize="true"
                            AllowRowSelectOnRowClick="true"
                            @bind-Value="@SelectedRows"
                            RowClick="OnRowClick"
                            RowExpand="OnRowExpand"
                            RowCollapse="OnRowCollapse"
                            CellRender="OnCellRender"
                            RowRender="OnRowRender">
                <Template Context="viewModel">
                    @if (viewModel is TestParameterValueCollectionViewModel vm && vm.IsDatasetType)
                    {
	                    <RadzenDataGrid TItem="ViewModelBase"
                                        Data="viewModel.Values"
                                        SelectionMode="DataGridSelectionMode.Single"
                                        AllowColumnResize="true"
                                        AllowRowSelectOnRowClick="true"
                                        @bind-Value="@SelectedRows"
                                        RowClick="OnChildRowClick"
                                        RowCreate="OnRowCreate"
                                        RowUpdate="OnRowUpdate"
                                        CellRender="OnCellRender"
                                        Render="OnChildGridRender">
                            <Columns>
                                <RadzenDataGridColumn TItem="ViewModelBase" Property="ParameterName" Title="Parameter" Width="150px"/>
                                <RadzenDataGridColumn TItem="ViewModelBase" Resizable="false" Width="38px">
                                    <Template Context="subViewModel">
                                        @if (subViewModel is DatasetTestParameterValueViewModel vm)
                                        {
	                                        <RadzenImage Path="@vm.ImageSource"></RadzenImage>
                                        }
                                    </Template>
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="ViewModelBase" Property="Value" Title="Value">
                                    <Template Context="subViewModel">
                                        <DynamicComponent Type="subViewModel.ComponentType" Parameters="subViewModel.ComponentParameters"/>
                                    </Template>
                                </RadzenDataGridColumn>

                                <!-- TEST: In the future, we should support an expression (builder). -->
                                <RadzenDataGridColumn TItem="ViewModelBase" Property="RowFilters" Title="Row Filter" Width="120px">
                                    <Template Context="subViewModel">
                                        @if (subViewModel is DatasetTestParameterValueViewModel vm)
                                        {
	                                        <DynamicComponent Type="@typeof(RowFilterViewBlazor)" Parameters="vm.ComponentParameters"/>
                                        }
                                    </Template>
                                </RadzenDataGridColumn>

                                <RadzenDataGridColumn TItem="ViewModelBase" Property="FilterExpression" Title="Filter Expression">
                                    <Template Context="subViewModel">
                                        @if (subViewModel is DatasetTestParameterValueViewModel vm)
                                        {
	                                        @vm.FilterExpression
                                        }
                                    </Template>
                                    <EditTemplate Context="subViewModel">
                                        @if (subViewModel is DatasetTestParameterValueViewModel vm)
                                        {
	                                        <RadzenTextBox @bind-Value="vm.FilterExpression" Style="width: 100%;"/>
                                        }
                                    </EditTemplate>
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="ViewModelBase" Property="UsedAsReferenceData" Title="Reference" Width="80px">
                                    <Template Context="subViewModel">
                                        @if (subViewModel is DatasetTestParameterValueViewModel vm)
                                        {
	                                        <RadzenCheckBox @bind-Value="vm.UsedAsReferenceData"/>
                                        }
                                    </Template>
                                    <EditTemplate Context="subViewModel">
                                        @if (subViewModel is DatasetTestParameterValueViewModel vm)
                                        {
	                                        <RadzenCheckBox @bind-Value="vm.UsedAsReferenceData"/>
                                        }
                                    </EditTemplate>
                                </RadzenDataGridColumn>
                            </Columns>
                        </RadzenDataGrid>
                    }
                    else
                    {
                        <RadzenDataGrid TItem="ViewModelBase"
                                        Data="viewModel.Values"
                                        SelectionMode="DataGridSelectionMode.Single"
                                        AllowColumnResize="true"
                                        AllowRowSelectOnRowClick="true"
                                        @bind-Value="@SelectedRows"
                                        RowClick="OnChildRowClick"
                                        RowCreate="OnRowCreate"
                                        RowUpdate="OnRowUpdate"
                                        CellRender="OnCellRender"
                                        Render="OnChildGridRender">
                            <Columns>
                                <RadzenDataGridColumn TItem="ViewModelBase" Property="ParameterName" Title="Parameter" Width="150px"/>
                                <RadzenDataGridColumn TItem="ViewModelBase" Property="Value" Title="Value">
                                    <Template Context="subViewModel">
                                        <DynamicComponent Type="subViewModel.ComponentType" Parameters="subViewModel.ComponentParameters"/>
                                    </Template>
                                </RadzenDataGridColumn>
                            </Columns>
                        </RadzenDataGrid>
                    }
                </Template>
                <Columns>
                    <RadzenDataGridColumn TItem="ViewModelBase" Property="ParameterName" Title="Parameter" Width="150px">
                        <Template Context="viewModel">
                            <span>@viewModel.ParameterName</span>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="ViewModelBase" Resizable="false" Width="38px">
                        <Template Context="viewModel">
                            @if (viewModel is DatasetTestParameterValueViewModel vm)
                            {
	                            <RadzenImage Path="@vm.ImageSource"></RadzenImage>
                            }
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="ViewModelBase" Property="Value" Title="Value" Width="300px">
                        <Template Context="viewModel">
                            <DynamicComponent Type="viewModel.ComponentType" Parameters="viewModel.ComponentParameters"/>
                        </Template>
                    </RadzenDataGridColumn>

                    <!-- Experimental: In the future, we should support an expression (builder). -->
                    <RadzenDataGridColumn TItem="ViewModelBase" Property="RowFilters" Title="Row Filter" Width="120px">
                        <Template Context="viewModel">
                            @if (viewModel is DatasetTestParameterValueViewModel vm)
                            {
	                            <DynamicComponent Type="@typeof(RowFilterViewBlazor)" Parameters="vm.ComponentParameters"/>
                            }
                        </Template>
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="ViewModelBase" Property="FilterExpression" Title="Filter Expression">
                        <Template Context="viewModel">
                            @if (viewModel is DatasetTestParameterValueViewModel vm)
                            {
                                @vm.FilterExpression
                            }
                        </Template>
                        <EditTemplate Context="viewModel">
                            @if (viewModel is DatasetTestParameterValueViewModel vm)
                            {
	                            <RadzenTextBox @bind-Value="vm.FilterExpression" Style="width: 100%;" />
                            }
                        </EditTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="ViewModelBase" Property="UsedAsReferenceData" Title="Reference" Width="80px">
                        <Template Context="viewModel">
                            @if (viewModel is DatasetTestParameterValueViewModel vm)
                            {
                                <RadzenSwitch  @bind-Value="vm.UsedAsReferenceData"/>
                            }
                        </Template>
                        <EditTemplate Context="viewModel">
                            @if (viewModel is DatasetTestParameterValueViewModel vm)
                            {
	                            <RadzenSwitch  @bind-Value="vm.UsedAsReferenceData"/>
                            }
                        </EditTemplate>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
        </div>

        <div class="col-auto">
            <div class="col">
                <RadzenButton ButtonStyle="ButtonStyle.Light" Click="() => UpClicked()" Disabled="UpButtonDisabled()">
                    <img src="images/UpArrow.png" class="ui-image"/>
                </RadzenButton>
            </div>
            <div class="col">
                <RadzenButton ButtonStyle="ButtonStyle.Light" Click="() => DownClicked()" Disabled="DownButtonDisabled()">
                    <img src="images/DownArrow.png" class="ui-image"/>
                </RadzenButton>
            </div>
            <div class="col">
                <RadzenButton ButtonStyle="ButtonStyle.Light" Click="() => InsertRowClicked()" Disabled="InsertRowButtonDisabled()">
                    <img src="images/Add.png" class="ui-image"/>
                </RadzenButton>
            </div>
            <div class="col">
                <RadzenButton ButtonStyle="ButtonStyle.Light" Click="() => DeleteRowClicked()" Disabled="DeleteRowButtonDisabled()">
                    <img src="images/Remove.png" class="ui-image"/>
                </RadzenButton>
            </div>
        </div>
    </div>
</div>
